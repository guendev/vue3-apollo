name: Deploy Docs

on:
  push:
    branches:
      - main
    paths:
      - 'packages/docs/**'
      - 'packages/core/**'
      - '.github/workflows/deploy-docs.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install dependencies (restore only)
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: pnpm install --frozen-lockfile --offline

      - name: Cache VitePress build
        uses: actions/cache@v4
        with:
          path: |
            packages/docs/.vitepress/cache
            packages/docs/.vitepress/dist
          key: ${{ runner.os }}-docs-${{ hashFiles('packages/docs/**', 'packages/core/**') }}
          restore-keys: |
            ${{ runner.os }}-docs-

      - name: Build docs
        run: pnpm run build:docs

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: vue3-apollo-docs
          directory: packages/docs/.vitepress/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
